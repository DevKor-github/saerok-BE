name: Deploy to Dev EC2

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy to EC2
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: build/libs/*.jar
          target: ~/saerok/
          strip_components: '2'

      - name: Restart application on EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          debug: true
          script: |
            script: |
              set -euxo pipefail
        
              echo ">>> 현재 디렉터리:"
              pwd
        
              echo ">>> 파일 목록:"
              ls -al
        
              echo ">>> ls *.jar 결과:"
              ls *.jar || true
        
              cd ~/saerok
        
              echo ">>> 이동 후 파일 목록:"
              ls -al
        
              echo ">>> saerok 내부 ls *.jar:"
              ls *.jar || true
        
              JAR_NAME=$(ls -1t *.jar | head -n 1)
              echo ">>> 선택된 JAR_NAME: $JAR_NAME"
        
              pkill -f 'java -jar' || true
              DB_URL="${{ secrets.DB_URL }}" \
              DB_USERNAME="${{ secrets.DB_USERNAME }}" \
              DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
              nohup java -jar $JAR_NAME --spring.profiles.active=dev > app.log 2>&1 &
